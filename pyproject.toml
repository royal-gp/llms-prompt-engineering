[tool.poetry]
name = "tmls-2023-workshop"
version = "0.1.0"
description = "TMLS 2023 workshop on Prompt Engineering"
authors = ["rodrigo-georgian"]

packages = [
    { include = "genai_bootcamp", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^1.0.0"
jupyter = "^1.0.0"
openai = "^0.27.7"
jupyterlab = "^4.0.1"
google-cloud-aiplatform = "^1.25.0"
notebook = "^6.5.4"
langchain = "^0.0.198"
google-search-results = "^2.4.2"

[tool.poetry.dev-dependencies]
pytest = "^7.0.0"
pre-commit = "^2.15.0"
black = "^22.0.0"
mypy = "^0.971"
isort = "^5.9.3"
flake8 = "^5.0.0"
pytest-cov = "^3.0.0"
coverage = {version = "^6.0.1", extras = ["toml"]}

[tool.semantic_release]
branch = "main"
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "src/genai_bootcamp/__init__.py:__version__"
build_command = "pip install poetry && poetry build"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
